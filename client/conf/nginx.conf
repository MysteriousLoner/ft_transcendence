user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    server {
        listen 8080 default_server;
        server_name localhost;
        return 301 https://localhost:5500$request_uri;  # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/transcendence.crt;
        ssl_certificate_key /etc/nginx/ssl/transcendence.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Redirect all HTTPS traffic from port 443 to port 5500
        return 301 https://localhost:5500$request_uri;
    }

     server {
        listen 5500 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/transcendence.crt;
        ssl_certificate_key /etc/nginx/ssl/transcendence.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        # Enable WebSocket support (WSS)
        location /ws/ {
            proxy_pass http://localhost:8000;  # Adjust backend WebSocket server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check endpoint
        location = /status {
            access_log off;
            default_type text/plain;
            add_header Content-Type text/plain;
            return 200 "alive";
        }
        
        # Serve static content
        location / {
            gzip off;
            root /usr/share/nginx/html/;
            index  index.html;
        }

        location ~* \.(js|css)$ {
            root /usr/share/nginx/html/;
        }
    }

    server {
        listen 8000;
        server_name localhost;

        location / {
            proxy_pass https://localhost:8000;  # Make sure this backend is up and running
        }
    }
    sendfile        on;
    keepalive_timeout  65;
}