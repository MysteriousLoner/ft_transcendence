services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - transcendence-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
    ports:
      - "8000:8000"
      - "8001:8001"
    volumes:
      - ./server:/app
      - django-certs:/etc/certs
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - transcendence-network

  nginx-server:
    build: ./client
    image: nginx-server
    container_name: ft_transcendence-nginx-1
    ports:
      - "5500:5500"
      - "8080:8080"
      - "443:443"
    volumes:
      - ./client/static/html:/usr/share/nginx/html/
      - ./client/static/css:/usr/share/nginx/html/css/
      - ./client/static/js:/usr/share/nginx/html/js/
      - ./client/conf:/etc/nginx/conf.d
    networks:
      - transcendence-network
    restart: on-failure

volumes:
  django-certs:
  
networks:
  transcendence-network:
    driver: bridge
  
  # client:
  #   build:
  #     context: ./client
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./client:/app
  #   env_file:
  #     - .env
